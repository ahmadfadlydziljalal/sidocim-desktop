/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.tresnamuda.sidocim;

import com.formdev.flatlaf.FlatLaf;
import com.formdev.flatlaf.extras.FlatAnimatedLafChange;
import com.formdev.flatlaf.themes.FlatMacDarkLaf;
import com.tresnamuda.sidocim.ui.layout.LoginForm;
import com.tresnamuda.sidocim.ui.layout.MainForm;

import java.awt.Component;
import java.awt.Dimension;
import java.io.IOException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;

/**
 *
 * @author dzil
 */
public class App extends javax.swing.JFrame {

    
    static final int WINDOW_WIDTH = 1200;
    static final int WINDOW_HEIGHT = 768;
    
    private static App app;
    private static Properties properties;
    
    private final MainForm mainForm;
    private final LoginForm loginForm;

    
    /**
     * Mengembalikan ukuran tinggi form
     * @return int
     */
    public static int showHeight() {
        return app != null ? app.getHeight() :  WINDOW_WIDTH;
    }
    
    
    /**
     * Mengembalikan ukuran lebar form
     * @return int
     */
    public static int showWidth() {
        return app != null ? app.getWidth() : WINDOW_WIDTH;
    }
    
   
    /**
     * Creates new form Application
     * @throws java.io.IOException
     */
    public App() throws IOException {
        
        
        initProperties();
        initComponents();
        
        
        setSize(new Dimension(WINDOW_WIDTH, WINDOW_HEIGHT));
        setLocationRelativeTo(null);
        
        mainForm = new MainForm();
        loginForm = new LoginForm();
        
        
        setContentPane(mainForm);
        
    }
    
    public static void initProperties() throws IOException{
        PropertiesReader propertiesReader = new PropertiesReader();
        properties = propertiesReader.getProperties();
    }
    
    public static Properties readProperties(){
        return properties;
    }

    public static void showForm(Component component) {
        app.mainForm.showForm(component);
    }
    
    public static void login() {
        FlatAnimatedLafChange.showSnapshot();
        app.setContentPane(app.mainForm);
        SwingUtilities.updateComponentTreeUI(app.mainForm);
        FlatAnimatedLafChange.hideSnapshotWithAnimation();
    }

    public static void logout() {
        FlatAnimatedLafChange.showSnapshot();
        app.setContentPane(app.loginForm);
        SwingUtilities.updateComponentTreeUI(app.loginForm);
        FlatAnimatedLafChange.hideSnapshotWithAnimation();
    }
    
 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 276, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]){
        FlatLaf.registerCustomDefaultsSource("theme");
        FlatMacDarkLaf.setup();
        
        java.awt.EventQueue.invokeLater(() -> {
            try {
                app = new App();
                app.setVisible(true);
            } catch (IOException ex) {
                Logger.getLogger(App.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables
}
